import{Engine,FollowCamera,Vector3}from"babylonjs";import{player_list,username}from"../connectionWS";import{initChat}from"../reactComponents/chat";import{inializeInputListeners}from"./inputListeners";import{createScene}from"./scene";export var canvas;export var engine;export var scene;export var sphere1;let doneOnce=false;var startRenderLoop=function(engine,canvas){engine.runRenderLoop(function(){if(scene&&scene.activeCamera){scene.render();player_list.forEach(e=>e.updateBulletPosition());sphere1?.move()}});engine.resize()};var createDefaultEngine=function(){return new Engine(canvas,true,{preserveDrawingBuffer:true,stencil:true,disableWebGL2Support:false})};export let initFunction=async function(){if(doneOnce)return;doneOnce=true;canvas=document.getElementById("canvas");initChat();var asyncEngineCreation=async function(){try{return createDefaultEngine()}catch(e){console.error("the available createEngine function failed. Creating the default engine instead");return createDefaultEngine()}};engine=await asyncEngineCreation();window.addEventListener("resize",function(){engine.resize()});window.engine=engine;if(!engine)throw new Error("engine should not be null.");startRenderLoop(engine,canvas);let scene=createScene();inializeInputListeners();return scene};export function set_my_sphere(){sphere1?.dispose();let player_sphere=player_list.get(username);if(player_sphere){sphere1=player_sphere;let cameraBuilder=new FollowCamera(sphere1.name+"Camera",sphere1.position.multiply(new Vector3(1,-1,1)),scene,sphere1);cameraBuilder.rotationOffset=180;scene.activeCamera=cameraBuilder}}export function setScene(e){if(e===undefined){throw new Error("Undefined Scene")}else{scene=e}}window.BABYLON=BABYLON;
//# sourceMappingURL=main.js.map