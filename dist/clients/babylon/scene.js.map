{"version":3,"file":"scene.js","names":["FreeCamera","HemisphericLight","MeshBuilder","Scene","Sprite","SpriteManager","StandardMaterial","Texture","Vector3","canvas","engine","scene","sphere1","createWall","light","gravity","createScene","window","createCamera","createLight","createGround","createSprites","collisionsEnabled","beforeRender","isJumping","applyJump","applyGravity","camera","setTarget","Zero","attachControl","intensity","ground","CreateGround","width","height","subdivisions","groundMaterial","diffuseTexture","material","checkCollisions","spriteManagerTrees","i","herb","Math","random","position","x","z","y","hits","multiPickWithRay","ray","m","isPickable","filtered","filter","e","pickedMesh","name","sphere","undefined","length","hit","pickedPoint","jumpRay"],"sources":["../../../src/clients/babylon/scene.ts"],"sourcesContent":["import { FreeCamera, HemisphericLight, MeshBuilder, Scene, Sprite, SpriteManager, StandardMaterial, Texture, Vector3 } from \"babylonjs\";\r\nimport { canvas, engine, scene, sphere1 } from \"./main\";\r\nimport { createWall } from \"./tools\";\r\nexport var light: HemisphericLight;\r\nexport var gravity: number;\r\n\r\nexport function createScene() {\r\n\r\n    // This creates a basic Babylon Scene object (non-mesh)\r\n    var scene = new Scene(engine!);\r\n\r\n    window.scene = scene;\r\n\r\n    createCamera()\r\n    createLight()\r\n    createGround()\r\n    createWall()\r\n\r\n    createSprites()\r\n\r\n    // sphere1 = new Avatar(scene, \"Well\", \"\");\r\n    gravity = -0.02;\r\n    scene.collisionsEnabled = true;\r\n\r\n    scene.beforeRender = () => {\r\n\r\n        sphere1?.isJumping ? applyJump() : applyGravity()\r\n    }\r\n\r\n    return scene;\r\n};\r\n\r\nfunction createCamera() {\r\n    // This creates and positions a free camera (non-mesh)\r\n    var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n\r\n    // This targets the camera to scene origin\r\n    camera.setTarget(Vector3.Zero());\r\n\r\n    // This attaches the camera to the canvas\r\n    camera.attachControl(canvas, true);\r\n}\r\n\r\nfunction createLight() {\r\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n    light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\r\n\r\n    // Default intensity is 1. Let's dim the light a small amount\r\n    light.intensity = 0.7;\r\n}\r\n\r\nfunction createGround() {\r\n    // Our built- shape. Params: name, width, depth, subdivs, scene\r\n    var ground = MeshBuilder.CreateGround(\"ground1\", { width: 50, height: 50, subdivisions: 2 }, scene);\r\n    const groundMaterial = new StandardMaterial(\"groundMaterial\", scene);\r\n    groundMaterial.diffuseTexture = new Texture(\"./img/grass.png\");\r\n    ground.material = groundMaterial;\r\n    ground.checkCollisions = true;\r\n    //ground.rotate(Axis.Z, 0.5)\r\n\r\n}\r\n\r\nfunction createSprites() {\r\n    var spriteManagerTrees = new SpriteManager(\"grassesManager\", \"./img/herb.png\", 2000, 800, scene);\r\n\r\n    //Creation of 2000 trees at random positions\r\n    for (var i = 0; i < 2000; i++) {\r\n        let herb = new Sprite(\"herb\", spriteManagerTrees);\r\n        herb.height = Math.random() * 2\r\n        herb.width = Math.random() * 2\r\n        herb.position.x = Math.random() * 50 - 25;\r\n        herb.position.z = Math.random() * 50 - 25;\r\n        herb.position.y = 0.5;\r\n    }\r\n}\r\n\r\nfunction applyGravity() {\r\n    //sphere1?.moveWithCollisions(new Vector3(0, -0.5, 0))\r\n    if (sphere1) {\r\n        var hits = scene.multiPickWithRay(sphere1.ray, (m) => { return m.isPickable });\r\n\r\n        var filtered = (hits?.filter(e => e.pickedMesh?.name !== sphere1?.sphere.name))\r\n\r\n        if (filtered !== undefined && filtered.length > 0) {\r\n            var hit = filtered[0]\r\n            if (hit !== null && hit.pickedPoint && sphere1.position.y > hit.pickedPoint.y + 1.2) {\r\n                sphere1.position.y += gravity\r\n            }\r\n        } else {\r\n            sphere1.position.y += gravity * 4\r\n        }\r\n    }\r\n}\r\n\r\nfunction applyJump() {\r\n    if (sphere1) {\r\n        var hits = scene.multiPickWithRay(sphere1.jumpRay, (m) => { return m.isPickable });\r\n\r\n        var filtered = (hits?.filter(e => e.pickedMesh?.name !== sphere1?.sphere.name))\r\n\r\n        if (filtered !== undefined && filtered.length > 0) {\r\n            var hit = filtered[0]\r\n            if (hit !== null && hit.pickedPoint && sphere1.position.y < hit.pickedPoint.y - 1.2) {\r\n                sphere1.position.y -= gravity\r\n            }\r\n        } else {\r\n            sphere1.position.y -= gravity * 6\r\n        }\r\n    }\r\n}"],"mappings":"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"}