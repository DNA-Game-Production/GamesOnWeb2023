import{Animation,Axis,Vector3}from"babylonjs";import{chatRef,renderReact}from"..";import{Avatar}from"./babylon/avatars/avatar";import{initFunction,scene,setScene,set_my_sphere}from"./babylon/main";import{updateHour}from"./babylon/time";import{getTime,isVector3Equal,makeid}from"./babylon/tools";import{askUsername}from"./reactComponents/login";import{ErrorNoServer}from"./reactComponents/noServer";export var ws;export var player_list=new Map;export var night_monster_list=new Map;export var username;export var meshes=[];window.playerList=player_list;export const serverMessages={SET_USERNAME:"usernameSetter",LOGIN:"login",LOGOUT:"logout",MESSAGE:"message",POSITION:"position",MONSTER_DATA:"monster_data",KILL_MONSTER:"kill_monster",DAMAGE_MONSTER:"damage_monster",FIRE_BULLET:"fireBullet",HOUR:"hour"};export function connect_to_ws(){ws=new WebSocket("wss://mmoactiongameserver.herokuapp.com/");ws.onerror=()=>{ErrorNoServer()};ws.onopen=e=>{askUsername()}}function setUsername(){ws.send(JSON.stringify({route:serverMessages.LOGIN,content:username}))}function setSocketMessageListener(){ws.addEventListener("message",function(event){let messageReceived=JSON.parse(event.data);switch(messageReceived.route){case serverMessages.LOGIN:{var sphere=new Avatar(scene,messageReceived.content,username);var sender_name=messageReceived.content;player_list.set(sender_name,sphere);if(sender_name===username){set_my_sphere();setPositionUpdateSender()}console.log("LOGIN IN: "+messageReceived.content);chatRef.current.displayStatusInChat(getTime(),messageReceived.content,true);break}case serverMessages.SET_USERNAME:{console.log("USERNAME UPDATED FROM "+username+" TO "+messageReceived.content);username=messageReceived.content;break}case serverMessages.LOGOUT:{let avatar_to_disconnect=player_list.get(messageReceived.content);if(avatar_to_disconnect!==undefined)avatar_to_disconnect.dispose();player_list.delete(messageReceived.content);console.log("LOGIN OUT: "+messageReceived.content);chatRef.current.displayStatusInChat(getTime(),messageReceived.content,false);break}case serverMessages.MESSAGE:{let messageContent=JSON.parse(messageReceived.content);if(messageContent.username===username)break;chatRef.current.writeMessageInChat(messageContent.time,messageContent.username,messageContent.message,false);break}case serverMessages.POSITION:{let messageContent=JSON.parse(messageReceived.content);avatar_update_from_serveur(messageContent,player_list);break}case serverMessages.MONSTER_DATA:{let messageContent=JSON.parse(messageReceived.content);avatar_update_from_serveur(messageContent,night_monster_list);break}case serverMessages.KILL_MONSTER:{let monster_to_kill=night_monster_list.get(messageReceived.content);console.log(monster_to_kill,messageReceived.content,night_monster_list);if(monster_to_kill!==undefined)monster_to_kill.dispose();night_monster_list.delete(messageReceived.content);break}case serverMessages.FIRE_BULLET:{if(messageReceived.content!==username){let firing_player=player_list.get(messageReceived.content);if(firing_player){firing_player.addBullet(true)}}break}case serverMessages.HOUR:{updateHour(messageReceived.content);break}default:console.log("received a message from server with an invalid route: "+messageReceived.route);}})}function setPositionUpdateSender(){let player;if(username&&(player=player_list.get(username)))sendPosition(player);setInterval(()=>{let player;if(username&&(player=player_list.get(username))&&(player.didSomething||!isVector3Equal(player.oldPosition,player.position))){sendPosition(player);player.oldPosition=player.position.clone()}},50)}function sendPosition(player){player.didSomething=false;var position_player=JSON.stringify({pos_x:player.position.x,pos_y:player.position.y,pos_z:player.position.z,username:username,health:player.currentHealth,maxHealth:player.maxHealth,direction:player.getDirection(Axis.Z)});ws.send(JSON.stringify({route:serverMessages.POSITION,content:position_player}))}export function sendMessage(time,msg){var message_player=JSON.stringify({username:username,time:time,message:msg});ws.send(JSON.stringify({route:serverMessages.MESSAGE,content:message_player}))}export function objToPosition({position}){return{pos_x:position.x,pos_y:position.y,pos_z:position.y}}function avatar_update_from_serveur(data,list){if(data.username===username&&list===player_list)return;let avatar_to_update=list.get(data.username);if(avatar_to_update===undefined){console.log("failed to find name "+data.username+" in list "+list+", adding him.");list.set(data.username,new Avatar(scene,data.username,username,{health:{maxHealth:data.maxHealth,currentHealth:data.health}}));avatar_to_update=list.get(data.username)}if(avatar_to_update){if(avatar_to_update.position.x!==data.pos_x||avatar_to_update.position.y!==data.pos_y||avatar_to_update.position.z!==data.pos_z){Animation.CreateAndStartAnimation("animMove",avatar_to_update,"position",60,3,avatar_to_update.position,new Vector3(data.pos_x,data.pos_y,data.pos_z),Animation.ANIMATIONLOOPMODE_CONSTANT)}let target=avatar_to_update.position.add(data.direction);avatar_to_update.lookAt(target);let health=data.health;avatar_to_update.healthSet(health)}else{console.log("WTF???????")}}export function establishConnection(name){var username_entry=name;var formatted_username_entry=username_entry?.replace(/["']/g,"");username=formatted_username_entry?formatted_username_entry:"";if(username.length>12){username=username.slice(0,12)}if(username===""){username=makeid(10)}console.log("connection successfully established!");setUsername();setSocketMessageListener();renderReact();initFunction().then(e=>{setScene(e);scene.collisionsEnabled=true})}
//# sourceMappingURL=connectionWS.js.map